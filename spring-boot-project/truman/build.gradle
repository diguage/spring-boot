plugins {
    id "java"
//    id "org.springframework.boot.conventions" // 检查代码风格
    id "org.springframework.boot.starter"
    id 'org.asciidoctor.jvm.convert'
//    id 'org.asciidoctor.jvm.pdf'
}

description = "Truman：Spring Boot Source Analysis"

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    api(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-web"))
    api(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-logging"))

//    TODO 如何使用 log4j 2
//    api(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-web")) {
//        exclude module: "spring-boot-starter-logging"
//    }
//    api(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-log4j2"))

//    使用测试，注解总报错
//    TODO 加了下面的依赖不报错了。新问题：明明没有使用 Kotlinx，为啥却要加这个依赖？
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1")
    api(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-test"))
}

sourceSets {
    main {
        java {
            exclude 'org/**'
        }
        resources {
            srcDirs 'src/main/resources', 'src/main/java'
            exclude '**/*.java'
        }
    }
}

asciidoctorj {
    version = '2.5.1'
    fatalWarnings ".*"
//    outputDir "$buildDir/docs/html"
    options doctype: 'book', eruby: 'erubis'
    attributes([
            author: 'D瓜哥',
            email: 'https://www.diguage.com',
            revnumber: project.version,
            icons: 'font',
            idprefix: '',
            idseparator: '-',
            docinfo: 'shared',
            sectanchors: '',
            sectnums: '',
            'source-highlighter': 'rouge',
            'rouge-style': 'github', // molokai, monokai, github, gruvbox
            'linkcss': 'true',
            toc: 'left',
            toclevels: 4,
            sectnums: false,
            sectnumlevels: 4,
            sectanchors: true,
            fontsDir: 'cfg/fonts',
            graphvizdot: '/usr/local/bin/dot',
            stylesdir: 'css',
            homepage: 'https://www.diguage.com',
            'spring-version': project.version,
//            'source_attr': 'linenums,indent=0,subs="attributes,verbatim"',
            'source_attr': 'indent=0,subs="attributes,verbatim"',
            'java_src_attr': 'source%nowrap,java,{source_attr}',
            'xml_src_attr': 'source%nowrap,xml,{source_attr}',
            'image_attr': 'align="center",width=98%',
            'diagram_attr': 'format=svg,align="center",width=98%'
    ])
//    attribute 'docinfo1', ''
//    pdfThemes {
//        local 'Source', {
//            themeDir = file('cfg/theme')
//            themeName = 'Source'
//        }
//    }
    // fontsDir file('cfg/fonts') // add the option, it will throw an error.
    // theme 'Source' // add the option, it will throw an error.
    modules {
        pdf {
            version '1.6.0'
        }
        epub {
            version '1.5.1'
        }
        diagram {
            version '2.1.2'
        }
    }
}

// TODO open the task, and run `./gradlew :truman:asciidoctor` will throw an error.
//asciidoctor {
//    baseDirIsProjectDir()
//    sourceDir  file('docs')
//    sources {
//        include '*.adoc'
//    }
//	outputDir "$buildDir/docs/html5"
////    outputDir  file('build/docs/html5')
//    logDocuments = true
//    resources {
//        from(sourceDir) {
//            include 'images/*.png', 'css/**', 'js/**'
//        }
////		from extractDocResources
//    }
//    into 'build/docs/html5/assets'
//}

//asciidoctorPdf {
//    baseDirFollowsSourceDir()
////	configurations 'asciidoctorExt'
//    sources {
//        include '*.adoc'
//    }
//    outputDir "$buildDir/docs/ref-docs/pdf"
//    logDocuments = true
//}
